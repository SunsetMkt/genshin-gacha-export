name: Auto Release
on:
  workflow_dispatch:
  push:
    tags:
    - "v*.*.*"

jobs:
  build-py39:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Cache Python packages
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        id: cache-pip
        with:
          path: ~\AppData\Local\pip\Cache
          key: windows-2022-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Python lib
        run: pip install -r requirements.txt

      - name: Get version
        run: echo "version=$(cat version.txt)" >> $env:GITHUB_ENV
        
      - name: Package to exe
        run: pyinstaller .\mainCapture.spec
      - name: Download plugin
        run: Invoke-WebRequest -Uri "https://github.com/sunfkny/CaptureApp/releases/latest/download/CaptureApp.exe" -OutFile "dist/CaptureApp.exe"
      - name: Zip files
        run: Compress-Archive dist\* genshin-gacha-export_capture.zip
        
      # - name: Remove output
      #   run: rm -r dist\*
        
      # - name: Package to exe
      #   run: pyinstaller .\main.spec
      # - name: Zip files
      #   run: Compress-Archive dist\* genshin-gacha-export.zip

      # - name: Release files
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     body_path: CHANGELOG.md
      #     tag_name: ${{ env.version }}
      #     files: |
      #       genshin-gacha-export.zip
      #       genshin-gacha-export_capture.zip

      - name: Release files
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          tag_name: ${{ env.version }}
          files: |
            genshin-gacha-export_capture.zip

      - name: Install CODING Generic
        run: npm install coding-generic -g
        
      # - name: Upload Artifacts
      #   run: coding-generic -u="${{ secrets.CODING_ARTIFACTS_TOKEN }}:${{ secrets.CODING_ARTIFACTS_PASSWORD }}" -p="genshin-gacha-export.zip" -r="https://sunfkny-generic.pkg.coding.net/genshin-gacha-export/releases/chunks/genshin-gacha-export.zip?version=${{ env.version }}"

      - name: Upload Artifacts
        run: coding-generic -u="${{ secrets.CODING_ARTIFACTS_TOKEN }}:${{ secrets.CODING_ARTIFACTS_PASSWORD }}" -p="genshin-gacha-export_capture.zip" -r="https://sunfkny-generic.pkg.coding.net/genshin-gacha-export/releases/chunks/genshin-gacha-export_capture.zip?version=${{ env.version }}"
      

  build-py37:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Cache Python packages
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        id: cache-pip
        with:
          path: ~\AppData\Local\pip\Cache
          key: windows-2019-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Python lib
        run: pip install -r requirements.txt

      - name: Get version
        run: echo "version=$(cat version.txt)" >> $env:GITHUB_ENV
        
      - name: Package to exe
        run: pyinstaller .\mainCapture.spec
      - name: Download plugin
        run: Invoke-WebRequest -Uri "https://github.com/sunfkny/CaptureApp/releases/latest/download/CaptureApp.exe" -OutFile "dist/CaptureApp.exe"
      - name: Zip files
        run: Compress-Archive dist\* genshin-gacha-export-win7_capture.zip

      # - name: Remove output
      #   run: rm -r dist\*

      # - name: Package to exe
      #   run: pyinstaller .\main.spec
      # - name: Zip files
      #   run: Compress-Archive dist\* genshin-gacha-export-win7.zip

      # - name: Release files
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     body_path: CHANGELOG.md
      #     tag_name: ${{ env.version }}
      #     files: |
      #       genshin-gacha-export-win7.zip
      #       genshin-gacha-export-win7_capture.zip
      - name: Release files
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          tag_name: ${{ env.version }}
          files: |
            genshin-gacha-export-win7_capture.zip

      - name: Install CODING Generic
        run: npm install coding-generic -g

      # - name: Upload Artifacts
      #   run: coding-generic -u="${{ secrets.CODING_ARTIFACTS_TOKEN }}:${{ secrets.CODING_ARTIFACTS_PASSWORD }}" -p="genshin-gacha-export-win7.zip" -r="https://sunfkny-generic.pkg.coding.net/genshin-gacha-export/releases/chunks/genshin-gacha-export-win7.zip?version=${{ env.version }}"

      - name: Upload Artifacts
        run: coding-generic -u="${{ secrets.CODING_ARTIFACTS_TOKEN }}:${{ secrets.CODING_ARTIFACTS_PASSWORD }}" -p="genshin-gacha-export-win7_capture.zip" -r="https://sunfkny-generic.pkg.coding.net/genshin-gacha-export/releases/chunks/genshin-gacha-export-win7_capture.zip?version=${{ env.version }}"
